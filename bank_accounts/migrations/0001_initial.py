# Generated by Django 5.2.1 on 2025-05-23 09:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('account_number', models.CharField(max_length=50, unique=True)),
                ('bank_name', models.CharField(max_length=255)),
                ('ifsc_code', models.CharField(max_length=20)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('allocated_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('spent_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('DEBIT', 'Debit'), ('CREDIT', 'Credit')], max_length=10)),
                ('transaction_head', models.CharField(choices=[('ELECTRICITY', 'Electricity Bill'), ('REMUNERATION_TEACHERS', 'Teachers Remuneration'), ('SALARIES_STAFF', 'Staff Salaries'), ('MAINTENANCE_BUILDING', 'Building Maintenance'), ('LIBRARY_BOOKS', 'Library Books/Resources'), ('LAB_EQUIPMENT', 'Lab Equipment Purchase'), ('SPORTS_EQUIPMENT', 'Sports Equipment'), ('HOSTEL_EXPENSES', 'Hostel Operations/Maintenance'), ('ADVERTISING_MARKETING', 'Advertising & Marketing'), ('STUDENT_WELFARE', 'Student Welfare Activities'), ('UTILITIES_WATER', 'Water Bill'), ('TELEPHONE_INTERNET', 'Telephone & Internet Bills'), ('TRANSPORTATION', 'Transportation Costs'), ('EXAM_FEES_COLLECTION', 'Exam Fees Collection'), ('ADMISSION_FEES_COLLECTION', 'Admission Fees Collection'), ('DONATIONS_RECEIVED', 'Donations Received'), ('BANK_INTEREST_EARNED', 'Bank Interest Earned'), ('VENDOR_PAYMENT_SUPPLIES', 'Vendor Payment - Office Supplies'), ('SECURITY_SERVICES', 'Security Services'), ('AUDIT_FEES', 'Audit Fees'), ('SCHOLARSHIPS_DISBURSED', 'Scholarships Disbursed'), ('CULTURAL_EVENTS', 'Cultural Event Expenses'), ('SPORTS_EVENTS', 'Sports Event Expenses'), ('RENT_RECEIVED', 'Rent Received (Property/Facilities)'), ('SEMINARS_WORKSHOPS', 'Seminars & Workshops Expenses'), ('RESEARCH_GRANTS_RECEIVED', 'Research Grants Received'), ('BANK_CHARGES', 'Bank Charges/Fees'), ('STUDENT_FEES_TUITION', 'Student Tuition Fees'), ('EQUIPMENT_REPAIR', 'Equipment Repair & Servicing'), ('UNIFORM_PURCHASE', 'Uniform Purchase'), ('PRINTING_STATIONERY', 'Printing & Stationery'), ('GOVT_GRANTS_RECEIVED', 'Government Grants Received'), ('TAX_PAYMENTS', 'Tax Payments'), ('LOAN_REPAYMENT', 'Loan Repayment (Principal & Interest)'), ('CONSTRUCTION_EXPENSES', 'New Construction/Renovation'), ('OTHERS', 'OTHERS')], max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('description', models.TextField(blank=True, null=True)),
                ('transaction_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='bank_accounts.bankaccount')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CashbookEntry',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bank_accounts.transaction')),
                ('is_cash_in', models.BooleanField(default=True)),
            ],
            bases=('bank_accounts.transaction',),
        ),
        migrations.CreateModel(
            name='LedgerEntry',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bank_accounts.transaction')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
            bases=('bank_accounts.transaction',),
        ),
        migrations.CreateModel(
            name='AdministrativeOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(max_length=100, unique=True)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('order_date', models.DateField()),
                ('approved_by', models.CharField(max_length=255)),
                ('amount_sanctioned', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='admin_order', to='bank_accounts.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('TEACHER', 'Teacher Payment'), ('VENDOR', 'Vendor Payment'), ('OTHER', 'Other Payment')], max_length=20)),
                ('payee_name', models.CharField(max_length=255)),
                ('reference_document', models.CharField(blank=True, help_text='e.g., Invoice number, administrative order ID', max_length=255, null=True)),
                ('payment_method', models.CharField(default='Bank Transfer', max_length=50)),
                ('payment_date', models.DateField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_details', to='bank_accounts.transaction')),
            ],
        ),
    ]
